enum Status {
  DONE
  TODO
}

type Transaction {
  id: ID!
  amount: Float!
  date: String!
  description: String
}

type ComputedTransaction {
  id: ID!
  amount: Float!
  date: String!
  balance: Float!
}

input NewTransaction {
  date: String!
  amount: Float!
  recurrency: String
  description: String
}

extend type Query {
  listTransactions(from: Date, to: Date): [ComputedTransaction!]!
}

extend type Mutation {
  createTransaction(input: NewTransaction!): Transaction!
  createTransactions(input: [NewTransaction!]!): [Transaction!]!

  deleteTransaction(id: ID!): ID!
  deleteTransactions(ids: [ID!]!): [ID!]!
}
