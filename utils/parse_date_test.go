package utils

import (
	"regexp"
	"testing"
)

// got these from https://github.com/araddon/dateparse/blob/master/example/main.go
var examples = [][]string{
	{"May 8, 2009 5:57:51 PM", "2009/05/08"},
	{"oct 7, 1970", "1970/10/07"},
	{"oct 7, '70", "1970/10/07"},
	{"oct. 7, 1970", "1970/10/07"},
	{"oct. 7, 70", "1970/10/07"},
	{"Mon Jan  2 15:04:05 2006", "2006/01/02"},
	{"Mon Jan  2 15:04:05 MST 2006", "2006/01/02"},
	{"Mon Jan 02 15:04:05 -0700 2006", "2006/01/02"},
	{"Monday, 02-Jan-06 15:04:05 MST", "2006/01/02"},
	{"Mon, 02 Jan 2006 15:04:05 MST", "2006/01/02"},
	{"Tue, 11 Jul 2017 16:28:13 +0200 (CEST)", "2017/07/11"},
	{"Mon, 02 Jan 2006 15:04:05 -0700", "2006/01/02"},
	{"Mon 30 Sep 2018 09:09:09 PM UTC", "2018/09/30"},
	{"Mon Aug 10 15:44:11 UTC+0100 2015", "2015/08/10"},
	{"Thu, 4 Jan 2018 17:53:36 +0000", "2018/01/04"},
	{"Fri Jul 03 2015 18:04:07 GMT+0100 (GMT Daylight Time)", "2015/07/03"},
	{"Sun, 3 Jan 2021 00:12:23 +0800 (GMT+08:00)", "2021/01/03"},
	{"September 17, 2012 10:09am", "2012/09/17"},
	{"September 17, 2012 at 10:09am PST-08", "2012/09/17"},
	{"September 17, 2012, 10:10:09", "2012/09/17"},
	{"October 7, 1970", "1970/10/07"},
	{"October 7th, 1970", "1970/10/07"},
	{"12 Feb 2006, 19:17", "2006/02/12"},
	{"12 Feb 2006 19:17", "2006/02/12"},
	{"14 May 2019 19:11:40.164", "2019/05/14"},
	{"7 oct 70", "1970/10/07"},
	{"7 oct 1970", "1970/10/07"},
	{"03 February 2013", "2013/02/03"},
	{"1 July 2013", "2013/07/01"},
	{"2013-Feb-03", "2013/02/03"},
	{"06/Jan/2008:15:04:05 -0700", "2008/01/06"},
	{"06/Jan/2008 15:04:05 -0700", "2008/01/06"},
	{"3/31/2014", "2014/03/31"},
	{"03/31/2014", "2014/03/31"},
	{"08/21/71", "1971/08/21"},
	{"8/1/71", "1971/08/01"},
	{"4/8/2014 22:05", "2014/04/08"},
	{"04/08/2014 22:05", "2014/04/08"},
	{"4/8/14 22:05", "2014/04/08"},
	{"04/2/2014 03:00:51", "2014/04/02"},
	{"8/8/1965 12:00:00 AM", "1965/08/08"},
	{"8/8/1965 01:00:01 PM", "1965/08/08"},
	{"8/8/1965 01:00 PM", "1965/08/08"},
	{"8/8/1965 1:00 PM", "1965/08/08"},
	{"8/8/1965 12:00 AM", "1965/08/08"},
	{"03/19/2012 10:11:59", "2012/03/19"},
	{"03/19/2012 10:11:59.3186369", "2012/03/19"},
	{"2014/3/31", "2014/03/31"},
	{"2014/03/31", "2014/03/31"},
	{"2014/4/8 22:05", "2014/04/08"},
	{"2014/04/08 22:05", "2014/04/08"},
	{"2014/04/2 03:00:51", "2014/04/02"},
	{"2014/4/02 03:00:51", "2014/04/02"},
	{"2012/03/19 10:11:59", "2012/03/19"},
	{"2012/03/19 10:11:59.3186369", "2012/03/19"},
	{"2014:3:31", "2014/03/31"},
	{"2014:03:31", "2014/03/31"},
	{"2014:4:8 22:05", "2014/04/08"},
	{"2014:04:08 22:05", "2014/04/08"},
	{"2014:04:2 03:00:51", "2014/04/02"},
	{"2014:4:02 03:00:51", "2014/04/02"},
	{"2012:03:19 10:11:59", "2012/03/19"},
	{"2012:03:19 10:11:59.3186369", "2012/03/19"},
	{"2006-01-02T15:04:05+0000", "2006/01/02"},
	{"2009-08-12T22:15:09-07:00", "2009/08/12"},
	{"2009-08-12T22:15:09", "2009/08/12"},
	{"2009-08-12T22:15:09.988", "2009/08/12"},
	{"2009-08-12T22:15:09Z", "2009/08/12"},
	{"2017-07-19T03:21:51:897+0100", "2017/07/19"},
	{"2019-05-29T08:41-04", "2019/05/29"},
	{"2014-04-26 17:24:37.3186369", "2014/04/26"},
	{"2012-08-03 18:31:59.257000000", "2012/08/03"},
	{"2014-04-26 17:24:37.123", "2014/04/26"},
	{"2013-04-01 22:43", "2013/04/01"},
	{"2013-04-01 22:43:22", "2013/04/01"},
	{"2014-12-16 06:20:00 UTC", "2014/12/16"},
	{"2014-12-16 06:20:00 GMT", "2014/12/16"},
	{"2014-04-26 05:24:37 PM", "2014/04/26"},
	{"2014-04-26 13:13:43 +0800", "2014/04/26"},
	{"2014-04-26 13:13:43 +0800 +08", "2014/04/26"},
	{"2014-04-26 13:13:44 +09:00", "2014/04/26"},
	{"2012-08-03 18:31:59.257000000 +0000 UTC", "2012/08/03"},
	{"2015-09-30 18:48:56.35272715 +0000 UTC", "2015/09/30"},
	{"2015-02-18 00:12:00 +0000 GMT", "2015/02/18"},
	{"2015-02-18 00:12:00 +0000 UTC", "2015/02/18"},
	{"2015-02-08 03:02:00 +0300 MSK m=+0.000000001", "2015/02/08"},
	{"2015-02-08 03:02:00.001 +0300 MSK m=+0.000000001", "2015/02/08"},
	{"2017-07-19 03:21:51+00:00", "2017/07/19"},
	{"2014-04-26", "2014/04/26"},
	{"2014-04", "2014/04/01"},
	{"2014", "2014/01/01"},
	{"2014-05-11 08:20:13,787", "2014/05/11"},
	{"2020-07-20+08:00", "2020/07/20"},
	{"3.31.2014", "2014/03/31"},
	{"03.31.2014", "2014/03/31"},
	{"08.21.71", "1971/08/21"},
	{"2014.03", "2014/03/01"},
	{"2014.03.30", "2014/03/30"},
	{"20140601", "2014/06/01"},
	{"20140722105203", "2014/07/22"},
	{"171113 14:14:20", "2017/11/13"},
	{"1332151919", "2012/03/19"},
	{"1384216367189", "2013/11/11"},
	{"1384216367111222", "2013/11/11"},
	{"1384216367111222333", "2013/11/11"},
}

func TestParseDate(t *testing.T) {
	for _, v := range examples {
		want := regexp.MustCompile(v[1])
		trueResult := ParseDate(&v[0])
		if !want.MatchString(trueResult) {
			t.Fatalf(`ParseDate("%s") should have given %s but resulted in %s instead`, v, want, trueResult)
		}
	}

}
